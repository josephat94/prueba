{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","complete","setComplete","className","initialValues","workbook","dashboard","token","onSubmit","values","setSubmitting","handleChange","errors","touched","handleBlur","handleSubmit","isSubmitting","width","style","margin","display","flexDirection","alignItems","type","name","onChange","onBlur","value","for","disabled","textAlign","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAAe,I,oBC+FAA,MA3Ff,WACE,MAA4BC,mBAAS,IAArC,mBACA,GADA,UACgCA,mBAAS,KAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,OACE,sBAAKC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SAEE,kDAOF,cAAC,IAAD,CACEC,cAAe,CAAEC,SAAU,GAAIC,UAAW,GAAIC,MAAO,IACrDC,SAAU,SAACC,EAAD,GAA+B,EAApBC,cAGnBR,EAAY,YAAD,OAAaO,EAAOF,MAApB,kBAAmCE,EAAOJ,SAA1C,YAAsDI,EAAOH,aAL5E,SAQG,gBACCG,EADD,EACCA,OAGAE,GAJD,EAECC,OAFD,EAGCC,QAHD,EAICF,cACAG,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OAUC,uBAAMC,MAAM,OAAOC,MAAO,CAACC,OAAO,GAAIF,MAAO,QAASG,QAAS,OAAQC,cAAc,SAAUC,WAAY,cAAed,SAAUO,EAApI,UACE,uBACEQ,KAAK,SACLC,KAAK,WACLC,SAAUd,EACVe,OAAQZ,EACRa,MAAOlB,EAAOJ,WAEhB,uBAAOuB,IAAI,WAAX,wBACA,uBACA,uBACEL,KAAK,SACLC,KAAK,YACLC,SAAUd,EACVe,OAAQZ,EACRa,MAAOlB,EAAOH,YAEhB,uBAAOsB,IAAI,WAAX,yBACA,uBACA,uBACEL,KAAK,SACLC,KAAK,QACLC,SAAUd,EACVe,OAAQZ,EACRa,MAAOlB,EAAOF,QAEhB,uBAAOqB,IAAI,WAAX,qBACA,uBACA,wBAAQL,KAAK,SAASM,SAAUb,EAAhC,0BAMZ,qBAAIE,MAAO,CAACY,UAAW,QAAvB,wBAEY7B,KAID,IAAVA,EAED,wBAAQE,UAAU,aAAac,MAAM,MAAMc,OAAO,MAAMb,MAAO,CAAEE,QAAS,QAA1E,SAGA,uBAAOI,KAAK,OAAOG,MAAO1B,MAKzB,SC1Ec+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.28eccd8a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport { Formik } from 'formik'\nfunction App() {\n  const [ticket, setTicket] = useState(\"\")\n  const [complete, setComplete] = useState(\"\")\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n        <h1>Tableau test 6</h1>\n\n      </header>\n\n\n\n\n      <Formik\n        initialValues={{ workbook: '', dashboard: '', token: '' }}\n        onSubmit={(values, { setSubmitting }) => {\n\n\n          setComplete(`/trusted/${values.token}/views/${values.workbook}/${values.dashboard}`);\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          /* and other goodies */\n        }) => (\n          <form width=\"30px\" style={{margin:30, width: '300px', display: 'flex', flexDirection:\"column\", alignItems: 'flex-start'}} onSubmit={handleSubmit}>\n            <input\n              type=\"string\"\n              name=\"workbook\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.workbook}\n            />\n            <label for=\"workbook\"> Workbook </label>\n            <br></br>\n            <input\n              type=\"string\"\n              name=\"dashboard\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.dashboard}\n            />\n            <label for=\"workbook\"> Dashboard </label>\n            <br></br>\n            <input\n              type=\"string\"\n              name=\"token\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.token}\n            />\n            <label for=\"workbook\"> Token </label>\n            <br></br>\n            <button type=\"submit\" disabled={isSubmitting}>\n              Enviar\n            </button>\n          </form>\n        )}\n      </Formik>\n<h1 style={{textAlign: 'left'}}>\n\ncomplete : {complete}\n\n</h1>\n\n{complete!=\"\"?\n\n<object className=\"tableauViz\" width=\"800\" height=\"600\" style={{ display: \"none\" }}>\n\n\n<param name=\"path\" value={complete} />\n\n</object>\n\n\n:null}\n \n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}